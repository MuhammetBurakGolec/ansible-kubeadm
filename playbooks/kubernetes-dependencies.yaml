---
- hosts: all
  become: true
  tasks: 
    - name: SwappOff
      shell:
        sudo swapoff -a 

    - name: Set Swappoff
      shell:
        sudo sed -i '/ swap / s/^/#/' /etc/fstab
    
    - name: Set Hosts
      become: true
      become_user: root
      shell: |
        cat > /etc/hosts << EOF 
        10.0.0.2 k8s-master
        10.0.0.3 node-1
        EOF

    - name: Create k8s.conf
      shell: |
        cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOF
        sudo modprobe overlay
        sudo modprobe br_netfilter

#    - name: Update k8s.conf
#      shell: |
#        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
#        net.bridge.bridge-nf-call-iptables  = 1
#        net.bridge.bridge-nf-call-ip6tables = 1
#        net.ipv4.ip_forward                 = 1
#        EOF
#        sudo sysctl --system

    - name: Update k8s.conf
      shell: |
        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF
        if [ -f /etc/sysctl.d/99-sysctl.conf ]; then
          sudo sed -i '/net.ipv4.conf.all.accept_source_route/d' /etc/sysctl.d/99-sysctl.conf
          sudo sed -i '/net.ipv4.conf.all.promote_secondaries/d' /etc/sysctl.d/99-sysctl.conf
          sudo sysctl --system
        fi  

    - name: Install Kubeadm Dependencies
      shell: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl
        sudo mkdir /etc/apt/keyrings
        curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
        

    - name: Install Kubeadm 
      shell: |
        sudo apt-get update     
        sudo apt install -y kubelet=1.26.5-00 kubeadm=1.26.5-00 kubectl=1.26.5-00

    - name: Install Docker 
      shell: |
        sudo apt install docker.io -y
        sudo mkdir /etc/containerd   
        sudo sh -c "containerd config default > /etc/containerd/config.toml"
        sudo sed -i 's/ SystemdCgroup = false/ SystemdCgroup = true/' /etc/containerd/config.toml
        
    - name: Restart containerd.service
      shell: |
        sudo systemctl restart containerd.service
      register: containerd

    - name: Restart kubelet.service
      shell: |
        sudo systemctl restart kubelet.service
        sudo systemctl enable kubelet.service
      register: kubelet
    
    - debug:
        msg: "{{ containerd }}"

    - debug:
        msg: "{{ kubelet }}"


